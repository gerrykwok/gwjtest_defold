require("main.common.MiscUtil")
local gwjui = require("gwjui.gwjui")
local TextureCache = require("gwjui.TextureCache")

function onGetPhotoResult(self, res, path)
	if(tostring(res) == "1") then
		local textureId = TextureCache.getInstance():addImage(path)
		if(textureId) then
			local node = gui.get_node("head")
			gui.set_texture(node, textureId)
		end
	end
end

function init(self)
	msg.post(".", "acquire_input_focus")
	self.m_input = gwjui.input.createInstance()
	self.m_url = msg.url()
	self.m_updateCount = 0

	local imageWidth = 320
	local imageHeight = 320
	--从相册选择图片
	local btn = gwjui.ScaleButton.new({
		main_id = "btn_get_local_picture",
		maxScale = 1.1,
	})
	:onButtonClicked(function()
		local localPath = sys.get_save_file("plm", "avatarout.png")
		--localPath = "/storage/emulated/0/avatarout.png"
		gwjui.printf("gwjgwj,get from gallery,localPath=%s", localPath)
		plmext.getPhoto(false, localPath, imageWidth, imageHeight, function(res)
			gwjui.printf("gwjgwj,get photo res=%s(%s)", tostring(res), type(res))
			msg.post(self.m_url, "get_photo_result", {res=res, path=localPath})
		end)
	end)
	--摄像机获取图片
	local btn = gwjui.ScaleButton.new({
		main_id = "btn_get_camera_picture",
		maxScale = 1.1,
	})
	:onButtonClicked(function()
		gwjui.printf("gwjgwj,get from camera")
		local localPath = sys.get_save_file("plm", "avatarout.png")
		--localPath = "/storage/emulated/0/avatarout.png"
		gwjui.printf("gwjgwj,get from gallery,localPath=%s", localPath)
		plmext.getPhoto(true, localPath, imageWidth, imageHeight, function(res)
			gwjui.printf("gwjgwj,get photo res=%s(%s)", tostring(res), type(res))
			msg.post(self.m_url, "get_photo_result", {res=res, path=localPath})
		end)
	end)
end

function final(self)
	self.m_input:final()
end

function update(self, dt)
	self.m_input:onUpdate(dt)
end

function on_message(self, message_id, message, sender)
	self.m_input:on_message(message_id, message, sender)
	if(message_id == hash("get_photo_result")) then
		local localPath = message.path
		local res = tonumber(message.res)
		gwjui.dump(message, "get photo result")
		TextureCache.getInstance():removeTextureForKey(localPath)
		local count = 0
		local function func()
			count = count + 1
			if(count >= 4) then
				gwjui.unscheduleUpdate(func)
				onGetPhotoResult(self, res, localPath)
			end
		end
		gwjui.scheduleUpdate(func)
	end
end

function on_input(self, action_id, action)
	self.m_input:onInput(action_id, action)
end

function on_reload(self)
end
